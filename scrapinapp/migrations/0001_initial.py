# Generated by Django 5.2.3 on 2025-07-08 08:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('regulation_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'sf_certifications',
            },
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=50, unique=True)),
                ('custom_short_name', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('original_id', models.CharField(blank=True, max_length=36, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('control_gathered_from', models.CharField(blank=True, choices=[('TC', 'TrustCloud'), ('ER', 'Eramba')], max_length=2, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'sf_controls',
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_id', models.CharField(max_length=50, unique=True)),
                ('security_group', models.CharField(blank=True, max_length=50, null=True)),
                ('policy_reference', models.CharField(max_length=150, unique=True)),
                ('policy_doc', models.TextField(null=True)),
                ('policy_version', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('policy_template', models.TextField(blank=True, null=True)),
                ('policy_gathered_from', models.CharField(blank=True, choices=[('TC', 'TrustCloud'), ('ER', 'Eramba')], max_length=2, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'policies',
                'db_table': 'sf_policies',
            },
        ),
        migrations.CreateModel(
            name='Clause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_id', models.CharField(max_length=50)),
                ('display_identifier', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('original_id', models.CharField(blank=True, max_length=36, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clauses', to='scrapinapp.certification')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='scrapinapp.clause')),
            ],
            options={
                'db_table': 'sf_clauses',
                'ordering': ['reference_id'],
                'unique_together': {('certification', 'reference_id')},
            },
        ),
        migrations.CreateModel(
            name='ControlClause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clause', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrapinapp.clause')),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrapinapp.control')),
            ],
            options={
                'db_table': '',
                'unique_together': {('control', 'clause')},
            },
        ),
        migrations.AddField(
            model_name='control',
            name='clauses',
            field=models.ManyToManyField(related_name='controls', through='scrapinapp.ControlClause', to='scrapinapp.clause'),
        ),
        migrations.CreateModel(
            name='PolicyClause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clause', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrapinapp.clause')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrapinapp.policy')),
            ],
            options={
                'db_table': 'sf_policy_clauses',
                'unique_together': {('policy', 'clause')},
            },
        ),
        migrations.AddField(
            model_name='policy',
            name='clauses',
            field=models.ManyToManyField(related_name='policies', through='scrapinapp.PolicyClause', to='scrapinapp.clause'),
        ),
        migrations.CreateModel(
            name='PolicyControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrapinapp.control')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scrapinapp.policy')),
            ],
            options={
                'db_table': 'sf_policy_control_mappings',
                'unique_together': {('policy', 'control')},
            },
        ),
        migrations.AddField(
            model_name='policy',
            name='controls',
            field=models.ManyToManyField(related_name='policies', through='scrapinapp.PolicyControl', to='scrapinapp.control'),
        ),
        migrations.CreateModel(
            name='FrameworkStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('framework', models.CharField(max_length=50)),
                ('standard_id', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField()),
                ('section', models.CharField(blank=True, max_length=36, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='framework_standards', to='scrapinapp.control')),
            ],
            options={
                'verbose_name': 'Framework Standard',
                'verbose_name_plural': 'Framework Standards',
                'db_table': 'sf_framework_standards',
                'unique_together': {('control', 'framework', 'standard_id')},
            },
        ),
    ]
